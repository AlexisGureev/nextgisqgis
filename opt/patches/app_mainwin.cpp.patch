--- a/src/app/mainwin.cpp	2022-02-18 15:06:10.000000000 +0300
+++ b/src/app/mainwin.cpp	2022-05-15 12:20:36.570338600 +0300
@@ -50,6 +50,22 @@
   return basename;
 }
 
+std::string pythonPathEnvString()
+{
+  std::string pythonPathEnv;
+
+  const std::string &baseName = moduleExeBaseName();
+  const std::size_t binPathPos = baseName.rfind("bin");
+  if (binPathPos != std::string::npos)
+  {
+      const std::string &qgisRootPath = baseName.substr(0, binPathPos);
+      pythonPathEnv = "PYTHONPATH=" + qgisRootPath + "lib\\python38;";
+      pythonPathEnv += qgisRootPath + "lib\\python38\\site-packages;";
+      pythonPathEnv += qgisRootPath + "lib\\python38\\lib-dynload;";
+  }
+  return pythonPathEnv;
+}
+
 int CALLBACK WinMain( HINSTANCE /*hInstance*/, HINSTANCE /*hPrevInstance*/, LPSTR /*lpCmdLine*/, int /*nCmdShow*/ )
 {
   std::string exename( moduleExeBaseName() );
@@ -129,6 +145,13 @@
     return EXIT_FAILURE;
   }
 
+  const std::string &pythonPathEnv = pythonPathEnvString();
+  if (_putenv(pythonPathEnv.c_str()) < 0)
+  {
+      showError("Could not set PYTHONPATH environment variable", "Error loading QGIS");
+      return EXIT_FAILURE;
+  }
+
 #ifndef _MSC_VER // MinGW
 #pragma GCC diagnostic ignored "-Wcast-function-type"
 #endif
@@ -168,10 +168,10 @@
 
 
 #ifdef _MSC_VER
-  HINSTANCE hGetProcIDDLL = LoadLibrary( "qgis_app.dll" );
+  HINSTANCE hGetProcIDDLL = LoadLibrary( "ngqgis_app.dll" );
 #else
 // MinGW
-  HINSTANCE hGetProcIDDLL = LoadLibrary( "libqgis_app.dll" );
+  HINSTANCE hGetProcIDDLL = LoadLibrary( "libngqgis_app.dll" );
 #endif
 
   if ( !hGetProcIDDLL )
@@ -188,7 +188,7 @@
       0,
       NULL );
 
-    std::string message = "Could not load qgis_app.dll \n Windows Error: " + std::string( errorText )
+    std::string message = "Could not load ngqgis_app.dll \n Windows Error: " + std::string( errorText )
                           + "\n Help: \n\n Check " + basename + ".env for correct environment paths";
     showError( message, "Error loading QGIS" );
 
@@ -207,7 +207,7 @@
 
   if ( !realmain )
   {
-    showError( "Could not locate main function in qgis_app.dll", "Error loading QGIS" );
+    showError( "Could not locate main function in ngqgis_app.dll", "Error loading QGIS" );
     return EXIT_FAILURE;
   }
 
