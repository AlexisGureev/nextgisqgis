--- a/src/core/symbology/qgssymbollayer.cpp	2023-08-21 19:39:45.751045266 +0300
+++ b/src/core/symbology/qgssymbollayer.cpp	2023-10-04 13:08:11.804798526 +0300
@@ -15,7 +15,7 @@
 
 #include "qgssymbollayer.h"
 #include "qgsrendercontext.h"
-#include "qgsdxfexport.h"
+// #include "qgsdxfexport.h"
 #include "qgsgeometrysimplifier.h"
 #include "qgspainteffect.h"
 #include "qgspainteffectregistry.h"
@@ -149,7 +149,7 @@
   delete symbol;
   return false;
 }
-
+/*
 bool QgsSymbolLayer::writeDxf( QgsDxfExport &e, double mmMapUnitScaleFactor, const QString &layerName, QgsSymbolRenderContext &context, QPointF shift ) const
 {
   Q_UNUSED( e )
@@ -214,7 +214,7 @@
 {
   return Qt::NoBrush;
 }
-
+*/
 QgsPaintEffect *QgsSymbolLayer::paintEffect() const
 {
   return mPaintEffect.get();
@@ -807,13 +807,13 @@
 {
   return context.convertToPainterUnits( mWidth, mWidthUnit, mWidthMapUnitScale );
 }
-
+/*
 double QgsLineSymbolLayer::dxfWidth( const QgsDxfExport &e, QgsSymbolRenderContext &context ) const
 {
   Q_UNUSED( context )
   return width() * QgsDxfExport::mapUnitScaleFactor( e.symbologyScale(), widthUnit(), e.mapUnits(), context.renderContext().mapToPixel().mapUnitsPerPixel() );
 }
-
+*/
 
 void QgsFillSymbolLayer::drawPreviewIcon( QgsSymbolRenderContext &context, QSize size )
 {
@@ -907,7 +907,7 @@
 {
   return {};
 }
-
+/*
 double QgsMarkerSymbolLayer::dxfSize( const QgsDxfExport &e, QgsSymbolRenderContext &context ) const
 {
   double size = mSize;
@@ -941,7 +941,7 @@
   }
   return angle;
 }
-
+*/
 void QgsSymbolLayer::prepareMasks( const QgsSymbolRenderContext &context )
 {
   mClipPath.clear();
