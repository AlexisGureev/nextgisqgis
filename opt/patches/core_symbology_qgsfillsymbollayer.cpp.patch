--- a/src/core/symbology/qgsfillsymbollayer.cpp	2023-08-21 19:39:45.747045550 +0300
+++ b/src/core/symbology/qgsfillsymbollayer.cpp	2023-10-04 13:31:32.316481597 +0300
@@ -18,7 +18,7 @@
 #include "qgslinesymbollayer.h"
 #include "qgssldexportcontext.h"
 #include "qgssymbollayerutils.h"
-#include "qgsdxfexport.h"
+// #include "qgsdxfexport.h"
 #include "qgsgeometry.h"
 #include "qgsimagecache.h"
 #include "qgsrendercontext.h"
@@ -514,7 +514,7 @@
   double offsetBleed = context.convertToPainterUnits( std::max( std::fabs( mOffset.x() ), std::fabs( mOffset.y() ) ), mOffsetUnit, mOffsetMapUnitScale );
   return penBleed + offsetBleed;
 }
-
+/*
 double QgsSimpleFillSymbolLayer::dxfWidth( const QgsDxfExport &e, QgsSymbolRenderContext &context ) const
 {
   double width = mStrokeWidth;
@@ -588,7 +588,7 @@
   painter.end();
   return pixmap.toImage();
 }
-
+*/
 //QgsGradientFillSymbolLayer
 
 QgsGradientFillSymbolLayer::QgsGradientFillSymbolLayer( const QColor &color, const QColor &color2,
@@ -1843,7 +1843,7 @@
 {
   return mStrokeWidthMapUnitScale;
 }
-
+/*
 double QgsImageFillSymbolLayer::dxfWidth( const QgsDxfExport &e, QgsSymbolRenderContext &context ) const
 {
   double width = mStrokeWidth;
@@ -1869,7 +1869,7 @@
   }
 #endif //0
 }
-
+*/
 QVariantMap QgsImageFillSymbolLayer::properties() const
 {
   QVariantMap map;
@@ -2351,7 +2351,7 @@
   }
   return 0;
 }
-
+/*
 QColor QgsSVGFillSymbolLayer::dxfColor( QgsSymbolRenderContext &context ) const
 {
   Q_UNUSED( context )
@@ -2361,7 +2361,7 @@
   }
   return mStroke->color();
 }
-
+*/
 QSet<QString> QgsSVGFillSymbolLayer::usedAttributes( const QgsRenderContext &context ) const
 {
   QSet<QString> attr = QgsImageFillSymbolLayer::usedAttributes( context );
