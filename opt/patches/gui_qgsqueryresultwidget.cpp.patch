--- a/src/gui/qgsqueryresultwidget.cpp	2023-08-21 19:30:50.846335869 +0300
+++ b/src/gui/qgsqueryresultwidget.cpp	2023-10-24 10:55:22.000000000 +0300
@@ -22,8 +22,8 @@
 #include "qgsvectorlayer.h"
 #include "qgsapplication.h"
 #include "qgsgui.h"
-#include "qgshistoryproviderregistry.h"
-#include "qgshistoryentry.h"
+// #include "qgshistoryproviderregistry.h"
+// #include "qgshistoryentry.h"
 #include "qgsproviderregistry.h"
 #include "qgsprovidermetadata.h"
 
@@ -175,14 +175,14 @@
     const QString sql { mSqlEditor->text( ) };
 
     bool ok = false;
-    mCurrentHistoryEntryId = QgsGui::historyProviderRegistry()->addEntry( QStringLiteral( "dbquery" ),
-                             QVariantMap
-    {
-      { QStringLiteral( "query" ), sql },
-      { QStringLiteral( "provider" ), mConnection->providerKey() },
-      { QStringLiteral( "connection" ), mConnection->uri() },
-    },
-    ok );
+//    mCurrentHistoryEntryId = QgsGui::historyProviderRegistry()->addEntry( QStringLiteral( "dbquery" ),
+//                             QVariantMap
+//    {
+//      { QStringLiteral( "query" ), sql },
+//      { QStringLiteral( "provider" ), mConnection->providerKey() },
+//      { QStringLiteral( "connection" ), mConnection->uri() },
+//    },
+//    ok );
 
     mWasCanceled = false;
     mFeedback = std::make_unique<QgsFeedback>();
@@ -403,14 +403,14 @@
 
       connect( mModel.get(), &QgsQueryResultModel::fetchingComplete, mStopButton, [ = ]
       {
-        bool ok = false;
-        const QgsHistoryEntry currentHistoryEntry = QgsGui::historyProviderRegistry()->entry( mCurrentHistoryEntryId, ok );
-        QVariantMap entryDetails = currentHistoryEntry.entry;
-        entryDetails.insert( QStringLiteral( "rows" ), mActualRowCount );
-        entryDetails.insert( QStringLiteral( "time" ), mQueryResultWatcher.result().queryExecutionTime() );
+//        bool ok = false;
+//        const QgsHistoryEntry currentHistoryEntry = QgsGui::historyProviderRegistry()->entry( mCurrentHistoryEntryId, ok );
+//        QVariantMap entryDetails = currentHistoryEntry.entry;
+//        entryDetails.insert( QStringLiteral( "rows" ), mActualRowCount );
+//        entryDetails.insert( QStringLiteral( "time" ), mQueryResultWatcher.result().queryExecutionTime() );
 
-        QgsGui::historyProviderRegistry()->updateEntry( mCurrentHistoryEntryId,
-            entryDetails );
+//        QgsGui::historyProviderRegistry()->updateEntry( mCurrentHistoryEntryId,
+//            entryDetails );
         mProgressBar->hide();
         mStopButton->setEnabled( false );
       } );
